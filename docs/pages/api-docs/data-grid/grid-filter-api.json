{
  "name": "GridFilterApi",
  "description": "The filter API interface that is available in the grid apiRef.",
  "properties": [
    {
      "name": "applyFilter",
      "description": "Applies a GridFilterItem on alls rows. If no <code>linkOperator</code> is given, the &quot;and&quot; operator is used.",
      "type": "(item: GridFilterItem, linkOperator?: GridLinkOperator) => void"
    },
    {
      "name": "applyFilterLinkOperator",
      "description": "Changes the GridLinkOperator used to connect the filters.",
      "type": "(operator: GridLinkOperator) => void"
    },
    {
      "name": "applyFilters",
      "description": "Applies all filters on all rows.",
      "type": "() => void"
    },
    {
      "name": "deleteFilter",
      "description": "Deletes a GridFilterItem.",
      "type": "(item: GridFilterItem) => void"
    },
    {
      "name": "getVisibleRowModels",
      "description": "Returns a sorted <code>Map</code> containing only the visible rows.",
      "type": "() => Map<GridRowId, GridRowData>"
    },
    { "name": "hideFilterPanel", "description": "Hides the filter panel.", "type": "() => void" },
    {
      "name": "setFilterModel",
      "description": "Sets the filter model to the one given by <code>model</code>.",
      "type": "(model: GridFilterModel) => void"
    },
    {
      "name": "showFilterPanel",
      "description": "Shows the filter panel. If <code>targetColumnField</code> is given, a filter for this field is also added.",
      "type": "(targetColumnField?: string) => void"
    },
    {
      "name": "upsertFilter",
      "description": "Updates or inserts a GridFilterItem.",
      "type": "(item: GridFilterItem) => void"
    }
  ]
}
